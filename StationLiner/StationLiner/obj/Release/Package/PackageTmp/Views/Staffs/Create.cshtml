@model StationLinerMVC.Models.StaffViewModels

@{
    ViewBag.Title = "Create Staff";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}
@section BreadCrumbs{
    <li>Staff Management</li>
    <li>
        @Html.ActionLink("All Staff", "Index")
    </li>
    <li class="active">Create new</li>
        }
       @section PageTitle{
           New Staff
           }
     @section Description{Fill staff details}
@section FormTitle{ Staff Details}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control",placeholder="User name" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",placeholder = "somebody@somewhere.com" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalIdentification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NationalIdentification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NationalIdentification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>



       

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class = "control-label col-md-2" for="">Role</label>
            <div class="col-md-10">
                @Html.DropDownList("Role", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
@*            @Html.LabelFor(model => model.UserAccount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Can login?</label>
            <div class="col-md-10">
                <select name="UserAccount" class="form-control">
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
            </div>
        </div>



     

        <div class="pull-right col-md-10">
            <div class="actions col-md-offset-6">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


